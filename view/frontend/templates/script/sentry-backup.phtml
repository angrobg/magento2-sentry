<?php
// phpcs:disable Magento2.Templates.ThisInTemplate.FoundThis

/** @var \JustBetter\Sentry\Block\SentryScript $block */
if (!$block->canUseScriptTag($block->getNameInLayout())) {
    return;
}

$bundleFile = 'bundle';

if ($block->isTracingEnabled()) {
    $bundleFile .= '.tracing';
}

if ($block->useSessionReplay()) {
    $bundleFile .= '.replay';
}

$bundleFile .= '.min.js';

$remoteFile = sprintf(
    'https://browser.sentry-cdn.com/%s/%s',
    $block->escapeHtmlAttr($block->getJsSdkVersion()),
    $bundleFile
);

// NIMA CHANGES
$remoteFileCaptureConsole = sprintf(
    'https://browser.sentry-cdn.com/%s/captureconsole.min.js',
    $block->escapeHtmlAttr($block->getJsSdkVersion())
);

$replaySessionRate = $block->getReplaySessionSampleRate();
$replayErrorRate = $block->getReplayErrorSampleRate();

// NIMA CHANGES - allow to fully log certain important uris
$logAllUris = [
    '/checkout',
];

$requestUri = $_SERVER['REQUEST_URI'] ?? null;
$logAllReplays = false;

if ($requestUri) {
    foreach ($logAllUris as $uri) {
        if (substr($requestUri, 0, strlen($uri)) == $uri) {
            $logAllReplays = true;
            $replaySessionRate = $replayErrorRate = '1';
            break;
        }
        unset($uri);
    }
}

?>

<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=Promise" crossorigin></script>
<script src="<?= /** @noEscape */
$remoteFile ?>" crossorigin="anonymous"></script>
<script src="<?= /** @noEscape */
$remoteFileCaptureConsole ?>" crossorigin="anonymous"></script>
<script>
    Sentry.init({
        dsn: '<?= $block->escapeUrl(trim($block->getDSN())) ?>',
        release: '<?= $block->escapeHtml(trim($block->getVersion())) ?>',
        environment: '<?= $block->escapeHtml(trim($block->getEnvironment())) ?>',
        integrations: [
            new Sentry.Integrations.CaptureConsole({levels: ['error']}),
            <?php if ($block->isTracingEnabled()): ?>
            new Sentry.BrowserTracing(),
            <?php endif ?>
            <?php if ($block->useSessionReplay()): ?>
            new Sentry.Replay({
                blockAllMedia: <?= $block->escapeHtml($block->getReplayBlockMedia() ? 'true' : 'false') ?>,
                maskAllText: <?= $block->escapeHtml($block->getReplayMaskText() ? 'true' : 'false') ?>,
            })
            <?php endif ?>
        ],
        <?php if ($block->isTracingEnabled()): ?>
        tracesSampleRate: <?= $block->escapeHtml($block->getTracingSampleRate()) ?>,
        <?php endif ?>
        <?php if ($logAllReplays || $block->useSessionReplay()): ?>
        replaysSessionSampleRate: <?= $block->escapeHtml($replaySessionRate) ?>,
        replaysOnErrorSampleRate: <?= $block->escapeHtml($replayErrorRate) ?>,
        <?php endif ?>
        <?php if ($block->stripStaticContentVersion() || $block->stripStoreCode()): ?>
        beforeSend: function (event) {
            event.exception.values.map(function (value) {
                if (value.stacktrace === undefined || !value.stacktrace) {
                    return value;
                }

                <?php if ($block->stripStaticContentVersion()): ?>
                value.stacktrace.frames.map(function (frame) {
                    frame.filename = frame.filename.replace(/version[0-9]{10}\//, '');
                    return frame;
                });
                <?php endif; ?>

                <?php if ($block->stripStoreCode()): ?>
                value.stacktrace.frames.map(function (frame) {
                    <?php // phpcs:disable Generic.Files.LineLength ?>
                    frame.filename = frame.filename.replace('/<?= $block->escapeHtml($block->getStoreCode()); ?>/', '/');
                    <?php // phpcs:enable Generic.Files.LineLength ?>
                    return frame;
                });
                <?php endif; ?>

                return value;
            });
            return event;
        }
        <?php endif; ?>
    });

    define('customerData',
        ['domReady!', 'jquery', 'Magento_Customer/js/customer-data'],
        function (domReady, $, customerData) {
            'use strict';

            var getCustomerInfo = function () {
                var customer = customerData.get('customer');

                return customer();
            };

            var isLoggedIn = function (customerInfo) {
                return customerInfo && customerInfo.firstname;
            };

            return function () {
                var deferred = $.Deferred();
                var customerInfo = getCustomerInfo();

                if (customerInfo && customerInfo.data_id) {
                    deferred.resolve(isLoggedIn(customerInfo), customerInfo);
                } else {
                    customerData.reload(['customer'], false)
                        .done(function () {
                            customerInfo = getCustomerInfo()
                            // NIMA CHANGES: just in case!
                            setTimeout(function() {
                                deferred.resolve(isLoggedIn(customerInfo), customerInfo);
                            }, 300);
                        })
                        .fail(function () {
                            deferred.reject();
                        });
                }

                return deferred;
            };

        }
    );

</script>

<?php if ($block->useLogRocket()): ?>
    <script src="https://cdn.lr-ingest.io/LogRocket.min.js" crossorigin="anonymous"></script>
    <script>
        window.LogRocket && window.LogRocket.init('<?= /* @noEscape */ trim($block->getLogrocketKey()) ?>');
    </script>
    <script>
        LogRocket.getSessionURL(sessionURL => {
            Sentry.configureScope(scope => {
                scope.setExtra("sessionURL", sessionURL);
            });
        });

        <?php if ($block->useLogRocketIdentify()): ?>

        require(["customerData"], function (customerData) {

            customerData().then(function (loggedIn, data) {
                if (!loggedIn) {
                    return;
                }

                LogRocket.identify(data.websiteId, {
                    name: data.fullname,
                    email: data.email
                });

            });
        });


        <?php endif; ?>
    </script>
<?php endif; ?>
<script>
    require(["customerData"], function (customerData) {

        customerData().then(function (loggedIn, data) {
            if (!loggedIn) {
                return;
            }

            var ud = {email: data.email, id: data.id, name: data.fullname};
            Sentry.setUser(ud);

        });
    });
</script>
